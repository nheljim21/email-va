from fpdf import FPDF

class EmailVAProjectPDF(FPDF):
    def header(self):
        self.set_font('Arial', 'B', 14)
        self.cell(0, 10, 'Email & Inbox Management â€“ Sample Materials', ln=True, align='C')
        self.ln(10)

    def add_section_title(self, title):
        self.set_font('Arial', 'B', 12)
        self.set_text_color(0, 0, 128)
        self.cell(0, 10, title, ln=True)
        self.set_text_color(0, 0, 0)

    def add_paragraph(self, text):
        self.set_font('Arial', '', 11)
        self.multi_cell(0, 8, text)
        self.ln(5)

def create_pdf(output_path="Email_Inbox_Management_Samples.pdf"):
    pdf = EmailVAProjectPDF()
    pdf.add_page()

    pdf.add_section_title("1. Email Inbox Management Workflow")
    pdf.add_paragraph("""\
1. Initial Cleanup
   - Archive or delete old emails
   - Create folders/labels
   - Unsubscribe from spam or promotional emails

2. Automation
   - Set up filters and rules (Gmail/Outlook)
   - Organize emails by category or importance
   - Use canned responses for frequent replies

3. Daily Management
   - Check inbox 1â€“2 times per day
   - Flag or highlight priority emails
   - Respond to messages using templates

4. Reporting (Optional)
   - Daily or weekly inbox summary sent to client
   - Notifications for critical emails
""")

    pdf.add_section_title("2. Sample Canned Response Template")
    pdf.add_paragraph("""\
Subject: Thank You for Reaching Out

Hi [Name],

Thank you for contacting us! We've received your message and will respond shortly.

If this is urgent, please feel free to call us at [Phone Number].

Best regards,
[Your Company or Client's Name]
""")

    pdf.add_section_title("3. Sample Daily Email Report")
    pdf.add_paragraph("""\
ðŸ“© Daily Inbox Summary â€“ July 12, 2025

âœ… 47 emails reviewed
ðŸ“Œ 5 flagged for client review
ðŸ“¤ 6 emails responded to using templates
ðŸ“‚ 12 emails sorted into folders
ðŸš« 24 deleted or archived

Notes:
- Awaiting reply on invoice approval
- Follow-up scheduled for July 14
""")

    pdf.output(output_path)
    print(f"PDF generated: {output_path}")

if __name__ == "__main__":
    create_pdf()
